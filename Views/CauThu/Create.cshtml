@model doan.Models.CauThu

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_QuanLy.cshtml";
}

<style>
    .huy {
        background-image: linear-gradient(120deg, #d4fc79 0%, #96e6a1 100%);
    }
    .h2 {
        text-align: center;
        color: purple;
        font-size: 30px;
    }

    .h4 {
        text-align: center;
        color: purple;
    }

    .form-horizontal {
        background-image: url('https://noithatbinhminh.com.vn/wp-content/uploads/2023/09/background-bong-da-03.jpg');
    }

    .form-group {
        font-weight: bold;
        justify-content: center; 
        align-items: center; 
    }
    .buton {
        background: linear-gradient(to right, #ff7eb3, #ff65a3, #7a77ff, #86a8e7); /* Gradient màu */
        border: none;
        border-radius: 50px; /* Làm bo tròn các góc của nút */
        color: white;
        padding: 10px 20px; /* Khoảng cách bên trong nút */
        font-size: 16px;
        font-weight: bold;
        text-align: center;
        text-decoration: none;
        transition: background 0.3s ease;
        cursor: pointer;
        display: inline-block;
        margin: 5px;
    }

        .buton:hover {
            background: linear-gradient(to right, #ff65a3, #ff7eb3, #86a8e7, #7a77ff);
        }
</style>

<div class="huy">
    @using (Html.BeginForm("Create", "CauThu", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()



        <div class="form-horizontal">
            <h2 class="h2">Thêm cầu thủ</h2>
            <h4 class="h4">CauThu</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.MaCT, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MaCT, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MaCT, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NgaySinh, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NgaySinh, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TenCT, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TenCT, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TenCT, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ViTri, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ViTri, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ViTri, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SoAo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SoAo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SoAo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CanNang, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CanNang, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CanNang, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MaDoi, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MaDoi, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MaDoi, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label for="upload" class="control-label col-md-2">Upload Image</label>
                <div class="col-md-10">
                    <input type="file" name="upload" id="upload" />
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-success" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "DanhSach",null, new { @class = "buton" })
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script type="text/javascript">
            function ChangeImage(input, previewElement) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        previewElement.src = e.target.result;
                        previewElement.style.display = 'block';
                    };
                    reader.readAsDataURL(input.files[0]);
                }
            }
        </script>
    }
</div>
@model doan.Models.Account

@{
    ViewBag.Title = "Dangky";
    Layout = "~/Views/Shared/_Nen.cshtml";
}

<link rel="stylesheet" href="~/Content/dang.css">

@using (Html.BeginForm("autheinDangky", "Login", FormMethod.Post))
{
    <div class="wapper">
        <div class="form-box login">
            <h2>Đăng ký</h2>
            <table class="table">
                <tr>
                    <th>@Html.DisplayNameFor(m => m.ID)</th>
                    <td>
                        <div class="input-box">
                            <span class="icon"><ion-icon name="mail"></ion-icon></span>
                            @Html.TextBoxFor(m => m.ID, new { @class = "input-field" })
                        </div>
                    </td>
                    <td>
                        @Html.ValidationMessageFor(m => m.ID)
                    </td>
                </tr>

                <tr>
                    <th>@Html.DisplayNameFor(m => m.userName)</th>
                    <td>
                        <div class="input-box">
                            <span class="icon"><ion-icon name="person-outline"></ion-icon></span>
                            @Html.TextBoxFor(m => m.userName, new { @class = "input-field" })
                        </div>
                    </td>
                    <td>
                        @Html.ValidationMessageFor(m => m.userName)
                    </td>
                </tr>

                <tr>
                    <th>@Html.DisplayNameFor(m => m.userPassword)</th>
                    <td>
                        <div class="input-box">
                            <span class="icon"><ion-icon name="lock-closed"></ion-icon></span>
                            <input type="password" id="userPassword" class="password-input" placeholder="Mật khẩu" />
                            <span class="toggle-password" id="toggleUserPassword">
                                <ion-icon name="eye-off-outline"></ion-icon>
                            </span>
                        </div>
                    </td>
                    <td>
                        @Html.ValidationMessageFor(m => m.userPassword)
                    </td>
                </tr>

                <tr>
                    <th>@Html.DisplayNameFor(m => m.repass)</th>
                    <td>
                        <div class="input-box">
                            <span class="icon"><ion-icon name="lock-closed"></ion-icon></span>
                            <input type="password" id="rePassword" class="password-input" placeholder="Nhập lại mật khẩu" />
                            <span class="toggle-password" id="toggleRePassword">
                                <ion-icon name="eye-off-outline"></ion-icon>
                            </span>
                        </div>
                    </td>
                    <td>
                        @Html.ValidationMessageFor(m => m.repass)
                    </td>
                </tr>

                <tr>
                    <th>@Html.DisplayNameFor(m => m.userRole)</th>
                    <td>
                        <div class="input-box">
                            <span class="icon"><ion-icon name="people-circle-outline"></ion-icon></span>
                            @Html.TextBoxFor(m => m.userRole, new { @class = "input-field" })
                        </div>
                    </td>
                    <td>
                        @Html.ValidationMessageFor(m => m.userRole)
                    </td>
                </tr>

                <tr>
                    <td colspan="3">
                        <input type="Submit" value="Đăng ký" class="them" />
                    </td>
                </tr>
                <tr>
                    <td>
                        <a href="/Login/Login" id="loginLink">Đã có tài khoản?</a>
                    </td>
                </tr>
            </table>
        </div>
    </div>

    <script src="script.js"></script>
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>

    <script>
        // Toggle user password visibility
        document.getElementById('toggleUserPassword').addEventListener('click', function () {
            const passwordField = document.getElementById('userPassword');
            const icon = this.querySelector('ion-icon');
            if (passwordField.type === 'password') {
                passwordField.type = 'text';
                icon.setAttribute('name', 'eye-outline'); // Change to eye icon
            } else {
                passwordField.type = 'password';
                icon.setAttribute('name', 'eye-off-outline'); // Change back to eye-off icon
            }
        });

        // Toggle repeat password visibility
        document.getElementById('toggleRePassword').addEventListener('click', function () {
            const passwordField = document.getElementById('rePassword');
            const icon = this.querySelector('ion-icon');
            if (passwordField.type === 'password') {
                passwordField.type = 'text';
                icon.setAttribute('name', 'eye-outline'); // Change to eye icon
            } else {
                passwordField.type = 'password';
                icon.setAttribute('name', 'eye-off-outline'); // Change back to eye-off icon
            }
        });

        document.getElementById('loginLink').addEventListener('click', function (e) {
            e.preventDefault(); // Prevent default page load
            const link = this.href;

            // Add a fade-out effect
            document.body.style.transition = 'opacity 0.5s ease';
            document.body.style.opacity = '0';

            // Redirect to the login page after the animation
            setTimeout(() => {
                window.location.href = link;
            }, 500); // Match the duration of the fade-out effect
        });
    </script>
}


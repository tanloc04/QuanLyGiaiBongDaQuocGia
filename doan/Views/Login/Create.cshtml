@model doan.Models.Account

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Nen.cshtml";
}



<style>
    * {
        margin: 0; /* Xóa margin cho tất cả các phần tử */
        padding: 0; /* Xóa padding cho tất cả các phần tử */
        box-sizing: border-box; /* Tính toán kích thước bao gồm padding và border */
    }

    body {
        background: #f0f0f0 url("https://t4.ftcdn.net/jpg/05/12/61/05/360_F_512610544_0excDel8sZTq4W0XLJTSehr9dZfOqi5R.jpg") no-repeat center center;
        background-size: cover;
        box-sizing: border-box;
        display: flex;
        flex-direction: column; /* Cho phép các phần tử con xếp theo cột */
        justify-content: center; /* Căn giữa theo chiều dọc */
        align-items: center; /* Căn giữa theo chiều ngang */
        min-height: 100vh;
    }

    .form-horizontal {
        max-width: 500px; /* Set max width for the form */
        margin: 0 auto; /* Center the form on the page */
        background: rgba(255, 255, 255, 0.9); /* Slightly transparent background */
        padding: 30px;
        border-radius: 15px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1); /* Softer shadow */
        position: relative;
    }

        /* Headings */
        .form-horizontal h2 {
            text-align: center;
            color: #ff0080; /* Main heading color */
            margin-bottom: 10px;
        }

        .form-horizontal h4 {
            text-align: center;
            color: #4b0082; /* Subheading color */
            margin-bottom: 20px;
        }

    .form-group {
        display: flex; /* Use flexbox to align items in a row */
        align-items: center; /* Center align items vertically */
        margin-bottom: 15px; /* Space between form groups */
    }

        .form-group label {
            flex: 1; /* Allow label to take up space */
            margin-right: 10px; /* Space between label and input */
            color: #333; /* Label color */
        }

    .form-control {
        flex: 2; /* Allow input to take more space */
        padding: 10px;
        border: 1px solid #ccc; /* Border color */
        border-radius: 5px; /* Rounded corners */
        outline: none; /* Remove outline */
        background: rgba(255, 255, 255, 0.9); /* Input background */
    }

    /* Validation message styling */
    .text-danger {
        color: red; /* Error message color */
    }

    /* Submit button styling */
    .form-actions {
        text-align: center; /* Căn giữa container nút */
        margin-top: 20px; /* Khoảng cách trên container nút */
    }

    .action-buttons {
        display: inline-flex; /* Sử dụng inline-flex để giữ các nút trong một hàng */
        gap: 10px; /* Khoảng cách giữa các nút */
    }

        .action-buttons .btn {
            padding: 10px 20px; /* Padding cho nút */
            border: none; /* Xóa viền mặc định */
            border-radius: 8px; /* Bo tròn góc */
            font-weight: bold; /* Chữ in đậm */
            cursor: pointer; /* Con trỏ chuột */
            transition: background-color 0.3s ease, transform 0.3s ease, box-shadow 0.3s ease; /* Hiệu ứng chuyển tiếp */
        }

        /* Submit button styling */
        .action-buttons .btn-success {
            background-color: #007bff; /* Màu xanh dương cho nút thành công */
            color: #fff; /* Màu chữ */
        }

            .action-buttons .btn-success:hover {
                background-color: #0056b3; /* Màu xanh dương đậm khi hover */
                transform: scale(1.05); /* Hiệu ứng phóng to nhẹ */
                box-shadow: 0 4px 8px rgba(0, 123, 255, 0.4); /* Hiệu ứng bóng */
            }

        /* Back button styling */
        .action-buttons .btn-dark {
            background-color: #6c757d; /* Màu xám cho nút quay lại */
            color: #fff; /* Màu chữ */
        }

            .action-buttons .btn-dark:hover {
                background-color: #5a6268; /* Màu xám đậm hơn khi hover */
                transform: scale(1.05); /* Hiệu ứng phóng to nhẹ */
                box-shadow: 0 4px 8px rgba(108, 117, 125, 0.4); /* Hiệu ứng bóng */
            }
</style>
@using (Html.BeginForm("Create", "Login", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2 class="h2">Thêm tài khoản</h2>
        <h4>Vui lòng điền thông tin bên dưới</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.repass, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.repass, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.repass, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.userRole, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.userRole, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.userRole, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-actions">
            <div class="action-buttons">
                <input type="submit" value="Tạo" class="btn btn-success" />
                @Html.ActionLink("Quay lại", "QuanLy", null, new { @class = "btn btn-dark" })
            </div>
        </div>
    </div>
}



